package DoublyLL_Problems;import java.util.Scanner;class TextState {    String content;    TextState prev, next;    public TextState(String content) {        this.content = content;        this.prev = null;        this.next = null;    }}class TextEditor {    private TextState head = null;    private TextState current = null;    private int size = 0;    private final int MAX_HISTORY = 10;    // Add new state (after typing or command)    public void addState(String content) {        TextState newState = new TextState(content);        if (current != null && current.next != null) {            // Remove all redo history            current.next.prev = null;            current.next = null;        }        if (head == null) {            head = newState;        } else {            current.next = newState;            newState.prev = current;        }        current = newState;        size++;        // Limit to last 10 states        if (size > MAX_HISTORY) {            head = head.next;            head.prev = null;            size--;        }        System.out.println("State saved.");    }    // Undo: move back to previous state    public void undo() {        if (current != null && current.prev != null) {            current = current.prev;            System.out.println("Undo successful.");        } else {            System.out.println("No more undo available.");        }    }    // Redo: move forward to next state    public void redo() {        if (current != null && current.next != null) {            current = current.next;            System.out.println("Redo successful.");        } else {            System.out.println("No more redo available.");        }    }    // Display current content    public void showCurrent() {        if (current != null) {            System.out.println("Current Text: " + current.content);        } else {            System.out.println("No content available.");        }    }    // For testing: Print full history    public void printHistory() {        TextState temp = head;        System.out.println("Full History:");        while (temp != null) {            System.out.println("- " + temp.content + (temp == current ? " [CURRENT]" : ""));            temp = temp.next;        }    }}public class UndoRedoEditor {    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        TextEditor editor = new TextEditor();        while (true) {            System.out.println("\n--- Text Editor Menu ---");            System.out.println("1. Type or Edit Text");            System.out.println("2. Undo");            System.out.println("3. Redo");            System.out.println("4. Show Current Text");            System.out.println("5. View History");            System.out.println("6. Exit");            System.out.print("Enter choice: ");            int choice = sc.nextInt();            sc.nextLine(); // consume newline            if (choice == 1) {                System.out.print("Enter new content: ");                String content = sc.nextLine();                editor.addState(content);            } else if (choice == 2) {                editor.undo();            } else if (choice == 3) {                editor.redo();            } else if (choice == 4) {                editor.showCurrent();            } else if (choice == 5) {                editor.printHistory();            } else if (choice == 6) {                System.out.println("Exiting...");                break;            } else {                System.out.println("Invalid choice.");            }        }    }}