import java.util.Scanner;class Ticket {    int ticketId;    String customerName;    String movieName;    String seatNumber;    String bookingTime;    Ticket next;    public Ticket(int ticketId, String customerName, String movieName, String seatNumber, String bookingTime) {        this.ticketId = ticketId;        this.customerName = customerName;        this.movieName = movieName;        this.seatNumber = seatNumber;        this.bookingTime = bookingTime;        this.next = null;    }}class TicketSystem {    private Ticket head = null;    private Ticket tail = null;    // Add ticket at end    public void addTicket(int ticketId, String customerName, String movieName, String seatNumber, String bookingTime) {        Ticket newTicket = new Ticket(ticketId, customerName, movieName, seatNumber, bookingTime);        if (head == null) {            head = tail = newTicket;            newTicket.next = head;        } else {            tail.next = newTicket;            newTicket.next = head;            tail = newTicket;        }        System.out.println("Ticket booked successfully.");    }    // Remove ticket by ID    public void removeTicket(int ticketId) {        if (head == null) {            System.out.println("No tickets to remove.");            return;        }        Ticket current = head;        Ticket previous = tail;        do {            if (current.ticketId == ticketId) {                if (current == head && current == tail) { // only one node                    head = tail = null;                } else {                    previous.next = current.next;                    if (current == head) head = head.next;                    if (current == tail) tail = previous;                }                System.out.println("Ticket with ID " + ticketId + " removed.");                return;            }            previous = current;            current = current.next;        } while (current != head);        System.out.println("Ticket ID not found.");    }    // Display all tickets    public void displayTickets() {        if (head == null) {            System.out.println("No tickets booked.");            return;        }        Ticket temp = head;        System.out.println("\nBooked Tickets:");        do {            printTicket(temp);            temp = temp.next;        } while (temp != head);    }    // Search by customer or movie name    public void searchTicket(String keyword) {        if (head == null) {            System.out.println("No tickets booked.");            return;        }        boolean found = false;        Ticket temp = head;        do {            if (temp.customerName.equalsIgnoreCase(keyword) || temp.movieName.equalsIgnoreCase(keyword)) {                printTicket(temp);                found = true;            }            temp = temp.next;        } while (temp != head);        if (!found) {            System.out.println("No matching ticket found for: " + keyword);        }    }    // Count booked tickets    public void countTickets() {        if (head == null) {            System.out.println("Total booked tickets: 0");            return;        }        int count = 0;        Ticket temp = head;        do {            count++;            temp = temp.next;        } while (temp != head);        System.out.println("Total booked tickets: " + count);    }    // Utility to print ticket    private void printTicket(Ticket t) {        System.out.println("Ticket ID: " + t.ticketId +                ", Customer: " + t.customerName +                ", Movie: " + t.movieName +                ", Seat: " + t.seatNumber +                ", Time: " + t.bookingTime);    }}public class TicketReservationApp {    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        TicketSystem system = new TicketSystem();        while (true) {            System.out.println("\n--- Ticket Reservation Menu ---");            System.out.println("1. Book Ticket");            System.out.println("2. Remove Ticket by ID");            System.out.println("3. Display All Tickets");            System.out.println("4. Search Ticket by Customer or Movie Name");            System.out.println("5. Count Total Tickets");            System.out.println("6. Exit");            System.out.print("Enter choice: ");            int choice = sc.nextInt();            sc.nextLine(); // consume newline            switch (choice) {                case 1:                    System.out.print("Enter Ticket ID: ");                    int id = sc.nextInt();                    sc.nextLine();                    System.out.print("Enter Customer Name: ");                    String customer = sc.nextLine();                    System.out.print("Enter Movie Name: ");                    String movie = sc.nextLine();                    System.out.print("Enter Seat Number: ");                    String seat = sc.nextLine();                    System.out.print("Enter Booking Time: ");                    String time = sc.nextLine();                    system.addTicket(id, customer, movie, seat, time);                    break;                case 2:                    System.out.print("Enter Ticket ID to remove: ");                    int removeId = sc.nextInt();                    system.removeTicket(removeId);                    break;                case 3:                    system.displayTickets();                    break;                case 4:                    System.out.print("Enter Customer or Movie Name to search: ");                    String keyword = sc.nextLine();                    system.searchTicket(keyword);                    break;                case 5:                    system.countTickets();                    break;                case 6:                    System.out.println("Exiting system...");                    return;                default:                    System.out.println("Invalid choice.");            }        }    }}